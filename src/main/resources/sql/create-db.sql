-- Reset schema
DROP SCHEMA PUBLIC CASCADE;

-- USERS (students only for now)
CREATE TABLE users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    failed_login_attempts INT DEFAULT 0,
    account_locked BOOLEAN DEFAULT FALSE
);

-- SUBJECTS
CREATE TABLE subjects (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    lecturer VARCHAR(100),
    day_of_week VARCHAR(20),
    time_slot VARCHAR(20)
);

-- ENROLLMENTS
CREATE TABLE enrollments (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER,
    subject_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (subject_id) REFERENCES subjects(id)
);

-- GRADES
CREATE TABLE grades (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER,
    subject_id INTEGER,
    grade VARCHAR(5),
    grade_date DATE,
    teacher VARCHAR(100),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (subject_id) REFERENCES subjects(id)
);

-- TUITION PAYMENTS
CREATE TABLE tuition (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER,
    payment_date DATE,
    amount DECIMAL(10,2),
    description VARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- LIBRARY HISTORY
CREATE TABLE library (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER,
    book_title VARCHAR(255),
    type VARCHAR(20), -- borrow, return, booking
    status VARCHAR(20), -- done, pending, overdue
    date DATE,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
